version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack
    volumes:
      - "localstack_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  airflow_webserver:
    image: apache/airflow:2.9.1
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
      AIRFLOW__WEBSERVER__SECRET_KEY: super_secret_123
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__CORE__REMOTE_LOGGING: "False"
    entrypoint: /bin/bash
    command: >
      -c "
      pip install boto3 psycopg2-binary apache-airflow-providers-snowflake snowflake-connector-python &&
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
      airflow webserver"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config:/opt/airflow/config
      - ./logs:/opt/airflow/logs

  airflow_scheduler:
    image: apache/airflow:2.9.1
    depends_on:
      - postgres
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: super_secret_123
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__CORE__REMOTE_LOGGING: "False"
    entrypoint: /bin/bash
    command: >
      -c "
      pip install boto3 psycopg2-binary apache-airflow-providers-snowflake snowflake-connector-python &&
      airflow db upgrade &&
      airflow scheduler"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config:/opt/airflow/config
      - ./logs:/opt/airflow/logs

volumes:
  localstack_data:
 